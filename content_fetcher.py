pagecont = ['API', 'X-D', 'Laser', 'Measurement', 'Linear', 'Data', 'Table', '(Company', 'Name:', 'YAXIS)', 'File', 'V', 'ersion:', '5', 'Instrument(S/N):', '5089', 'File', 'Name:', 'Y', 'AXIS.pos', 'TestDate:', '12/16/2022', 'TestTime:17:46:39', 'MachID:', 'GEE', 'PEEMachName:', 'NIKON', 'CMMOperator:', 'U', 'VISTACNCProg:', 'CMMFeedRate:', 'SEMI', 'AUTO', 'AxesLoc:', '(Y)', '0', '(Z)', '0', '(U)', '0', '(V)', '0', '(W)', '0', 'TestAxis:', '(Z)', 'Diagonal:', 'X1', '800', 'Y1', '300', 'Z1', '-100', 'X2', '0', 'Y2', '-300', 'Z2', '300', 'Unit:', 'mm', '1', 'IniPos:', '0', 'EndPos:', '600', 'Length:', '600', 'Increm:', '100', 'RunNum:', '3', 'NumofPos:', '7', 'NumofPoints:', '42', 'TestType:', 'BidirectionTestMode:', 'CNCManual', 'Dwell:', '3Window:', '0.1', 'Direction:', '0', 'Humidity:', '50', 'ExpCoef:', '10', 'DeadPath:', '100', 'Position', 'LasRead', 'LinearError', 'StatusAirTempAirPressMatTempMatTemp2MatTemp3', '0.00000', '0.00010', '0.00010', '0', '24.40', '710.34', '24.82', '-1.00', '-1.00', '100.00000', '99.91283', '-0.08717', '0', '24.39', '710.35', '24.84', '-1.00', '-1.00', '200.00000', '199.88745', '-0.1', '1255', '0', '24.40', '710.34', '24.85', '-1.00', '-1.00', '300.00000', '299.90863', '-0.09137', '0', '24.44', '710.35', '24.87', '-1.00', '-1.00', '400.00000', '399.89502', '-0.10498', '0', '24.47', '710.36', '24.87', '-1.00', '-1.00', '500.00000', '499.82165', '-0.17835', '0', '24.53', '710.35', '24.89', '-1.00', '-1.00', '600.00000', '599.87729', '-0.12271', '0', '24.58', '710.36', '24.92', '-1.00', '-1.00', '600.00000', '599.94457', '-0.05543', '0', '24.58', '710.35', '24.91', '-1.00', '-1.00', '500.00000', '499.94455', '-0.05545', '0', '24.57', '710.36', '24.89', '-1.00', '-1.00', '400.00000', '399.96018', '-0.03982', '0', '24.54', '710.36', '24.87', '-1.00', '-1.00', '300.00000', '299.97818', '-0.02182', '0', '24.51', '710.36', '24.86', '-1.00', '-1.00', '200.00000', '199.95605', '-0.04395', '0', '24.47', '710.36', '24.85', '-1.00', '-1.00', '100.00000', '99.97964', '-0.02036', '0', '24.42', '710.37', '24.84', '-1.00', '-1.00', '0.00000', '-0.0171', '1', '-0.0171', '1', '0', '24.38', '710.37', '24.84', '-1.00', '-1.00', '0.00000', '-0.06794', '-0.06794', '0', '24.33', '710.36', '24.81', '-1.00', '-1.00', '100.00000', '99.91860', '-0.08140', '0', '24.28', '710.37', '24.78', '-1.00', '-1.00', '200.00000', '199.8951', '1', '-0.10489', '0', '24.25', '710.36', '24.79', '-1.00', '-1.00', '300.00000', '299.91793', '-0.08207', '0', '24.26', '710.36', '24.80', '-1.00', '-1.00', '400.00000', '399.89581', '-0.10419', '0', '24.31', '710.36', '24.80', '-1.00', '-1.00', '500.00000', '499.84386', '-0.15614', '0', '24.35', '710.39', '24.82', '-1.00', '-1.00', '600.00000', '599.94374', '-0.05626', '0', '24.43', '710.39', '24.81', '-1.00', '-1.00', '600.00000', '599.94341', '-0.05659', '0', '24.46', '710.38', '24.80', '-1.00', '-1.00', '500.00000', '499.94217', '-0.05783', '0', '24.49', '710.39', '24.80', '-1.00', '-1.00', '400.00000', '399.95893', '-0.04107', '0', '24.50', '710.39', '24.77', '-1.00', '-1.00', '300.00000', '299.97884', '-0.021', '16', '0', '24.49', '710.40', '24.75', '-1.00', '-1.00', '200.00000', '199.95722', '-0.04278', '0', '24.48', '710.40', '24.73', '-1.00', '-1.00', '100.00000', '99.98035', '-0.01965', '0', '24.47', '710.40', '24.72', '-1.00', '-1.00', '0.00000', '-0.01640', '-0.01640', '0', '24.45', '710.41', '24.71', '-1.00', '-1.00', '0.00000', '-0.06855', '-0.06855', '0', '24.41', '710.42', '24.68', '-1.00', '-1.00', '100.00000', '99.91885', '-0.081', '15', '0', '24.35', '710.45', '24.63', '-1.00', '-1.00', '200.00000', '199.89525', '-0.10475', '0', '24.36', '710.45', '24.63', '-1.00', '-1.00', '300.00000', '299.92229', '-0.07771', '0', '24.38', '710.44', '24.63', '-1.00', '-1.00', '400.00000', '399.89692', '-0.10308', '0', '24.50', '710.46', '24.70', '-1.00', '-1.00', '500.00000', '499.86232', '-0.13768', '0', '24.53', '710.47', '24.70', '-1.00', '-1.00', '600.00000', '599.90072', '-0.09928', '0', '24.28', '710.49', '24.57', '-1.00', '-1.00', '600.00000', '599.95697', '-0.04303', '0', '24.26', '710.50', '24.55', '-1.00', '-1.00', '500.00000', '499.95245', '-0.04755', '0', '24.31', '710.50', '24.56', '-1.00', '-1.00', '400.00000', '399.96800', '-0.03200', '0', '24.34', '710.51', '24.59', '-1.00', '-1.00', '300.00000', '299.98910', '-0.01090', '0', '24.39', '710.53', '24.61', '-1.00', '-1.00', '200.00000', '199.96634', '-0.03366', '0', '24.44', '710.54', '24.63', '-1.00', '-1.00', '100.00000', '99.98763', '-0.01237', '0', '24.48', '710.54', '24.65', '-1.00', '-1.00', '0.00000', '-0.01062', '-0.01062', '0', '24.51', '710.54', '24.68', '-1.00', '-1.00', 'DecimalPoints:', '4', 'HardwareNo:', '4', 'WaveLength:', '0.000632990427', 'Comments:', 'None', 'Laser', 'status', 'comments:', 'Laser', 'status', '=', '0', '-------------->', 'Laser', 'Normal', 'Laser', 'status', '=', '1', '-------------->', 'Warm', 'Up', 'Laser', 'status', '=', '2', '-------------->', 'Path', 'Error', 'Laser', 'status', '=', '3', '-------------->', 'Over', 'Speed', 'Laser', 'status', '=', '4', '-------------->', 'Wireless', 'Error', 'ErrorUnit:', 'mm', 'ZeroOffset:', 'Off', 'API', 'Linear', 'Error', 'Compensation', 'Table', 'Position', 'Bidirectional', 'Avg', 'Error', '0.000000', '-0.030087', '100.000000', '-0.050350', '200.000000', '-0.073764', '300.000000', '-0.050832', '400.000000', '-0.070862', '500.000000', '-0.105494', '600.000000', '-0.072215', 'Position', 'Forward', 'Directional', 'Avg', 'Error', '0.000000', '-0.045463', '100.000000', '-0.083239', '200.000000', '-0.107396', '300.000000', '-0.083710', '400.000000', '-0.104085', '500.000000', '-0.157379', '600.000000', '-0.092753', 'Position', 'Backward', 'Directional', 'Avg', 'Error', '600.000000', '-0.051676', '500.000000', '-0.053609', '400.000000', '-0.037638', '300.000000', '-0.017955', '200.000000', '-0.040131', '100.000000', '-0.017461', '0.000000', '-0.014710', 'API', 'Linear', 'Standard', 'Deviation', 'Error', 'Table', 'Position', 'Mean', 'Stdev', 'Mean+2*sigma', 'Mean-2*sigma', '0.000000', '-0.030087', '0.030193', '0.030300-0.090473', '100.000000', '-0.050350', '0.036201', '0.022052', '-0.122752', '200.000000', '-0.073764', '0.037122', '0.000481', '-0.148008', '300.000000', '-0.050832', '0.036491', '0.022151', '-0.123815', '400.000000', '-0.070862', '0.036532', '0.002202', '-0.143925', '500.000000', '-0.105494', '0.058378', '0.01', '1262', '-0.222250', '600.000000', '-0.072215', '0.031347-0.009522-0.134908', 'API', 'Linear', 'Data', 'Analysis', 'Table', '<ASME', 'B5.54-1992>', 'Displacement', 'Accuracy:', '0.142669', 'Max', 'B', '(Reversal):', '0.103770', 'Max', 'Repeatability:', '0.157841', '<Environment>', 'Average', 'Air', 'Temperature:', '24.4', 'Average', 'Material(1)', 'Temperature:', '24.8', 'Average', 'Material(2)', 'Temperature:', 'N/A', 'Average', 'Material(3)', 'Temperature:', 'N/A', 'Average', 'Air', 'Pressure:', '710.4', 'Travel', 'Length:', '600.0000']

def get_readings_data(pagecont):
    key = 'Position'
    clse = "DecimalPoints:"
    idx = pagecont.index(key)
    end = pagecont.index(clse)

    one = idx+4

    new = pagecont[one:end]

    print("new\n",new)
    base_data = []
    read_data = []
    for i in range(1,len(new)-2):

        a = float(new[i-1])
        b = float(new[i])
        c = float(new[i+1])
        if int(b)+1 == int(a):

            base_data.append(a)
            read_data.append(b)


    print("base_data",base_data)
    print("read_data",read_data)

    return base_data,read_data
base_data,read_data  = get_readings_data(pagecont)
# print("base_data",len(base_data))
# print("read_data",len(read_data))

# for i in range(0,len(base_data)):
#     print("o,r",base_data[i],read_data[i])


# exit()

def get_readings(base_data,read_data):

    reads = {}
    for i in range(0,len(base_data)):
        key = base_data[i]
        value = read_data[i]
        # print("ikey,value",key,value)
        # print("i",i)
        if key in reads.keys():
            print("if ", key,value)
            old_value = reads[key]
            print("old_value", old_value)
            old_value.append(value)
            print("new_value",old_value)
            reads[key] = old_value
            print("41",reads)
        else:
            print("else ", key, value)
            reads[key] = [value]
            print("41", reads)

    return reads
reads = get_readings(base_data,read_data)

print("reads",reads)


